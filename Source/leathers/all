// This file generated automatically:
// https://github.com/ruslo/sugar/wiki/Cross-platform-warning-suppression

// Copyright (c) 2014, Ruslan Baratov
// All rights reserved.

#include <leathers/c++98-compat>
#include <leathers/c++98-compat-pedantic>
#include <leathers/cast-align>
#include <leathers/conditional-uninitialized>
#include <leathers/conversion>
#include <leathers/covered-switch-default>
#include <leathers/deprecated>
#include <leathers/deprecated-declarations>
#include <leathers/deprecated-objc-isa-usage>
#include <leathers/deprecated-register>
#include <leathers/disabled-macro-expansion>
#include <leathers/documentation>
#include <leathers/documentation-unknown-command>
#include <leathers/empty-body>
#include <leathers/extra-semi>
#include <leathers/global-constructors>
#include <leathers/implicit-fallthrough>
#include <leathers/four-char-constants>
#include <leathers/missing-noreturn>
#include <leathers/non-virtual-dtor>
#include <leathers/old-style-cast>
#include <leathers/padded>
#include <leathers/shift-sign-overflow>
#include <leathers/sign-compare>
#include <leathers/switch>
#include <leathers/switch-enum>
#include <leathers/undef>
#include <leathers/unreachable-code>
#include <leathers/unused-parameter>
#include <leathers/used-but-marked-unused>
#include <leathers/weak-vtables>
#include <leathers/shadow>
#include <leathers/bool-conversion>
#include <leathers/constant-conversion>
#include <leathers/shorten-64-to-32>
#include <leathers/enum-conversion>
#include <leathers/int-conversion>
#include <leathers/sign-conversion>
#include <leathers/missing-braces>
#include <leathers/return-type>
#include <leathers/parentheses>
#include <leathers/missing-field-initializers>
#include <leathers/missing-prototypes>
#include <leathers/newline-eof>
#include <leathers/pointer-sign>
#include <leathers/format>
#include <leathers/uninitialized>
#include <leathers/unknown-pragmas>
#include <leathers/unused-function>
#include <leathers/unused-label>
#include <leathers/unused-value>
#include <leathers/unused-variable>
#include <leathers/exit-time-destructors>
#include <leathers/overloaded-virtual>
#include <leathers/invalid-offsetof>
#include <leathers/c++11-extensions>
#include <leathers/duplicate-method-match>
#include <leathers/implicit-atomic-properties>
#include <leathers/objc-missing-property-synthesis>
#include <leathers/protocol>
#include <leathers/selector>
#include <leathers/deprecated-implementations>
#include <leathers/strict-selector-match>
#include <leathers/undeclared-selector>
#include <leathers/objc-root-class>
#include <leathers/explicit-ownership-type>
#include <leathers/implicit-retain-self>
#include <leathers/arc-repeated-use-of-weak>
#include <leathers/receiver-is-weak>
#include <leathers/arc-bridge-casts-disallowed-in-nonarc>
#include <leathers/unreferenced-inline>
#include <leathers/constant-conditional>
#include <leathers/automatic-inline>
#include <leathers/copy-ctor-could-not-be-generated>
#include <leathers/catch-semantic-changed>
#include <leathers/assign-could-not-be-generated>
#include <leathers/assign-base-inaccessible>
#include <leathers/no-such-warning>
#include <leathers/dflt-ctor-could-not-be-generated>
#include <leathers/dflt-ctor-base-inaccessible>
#include <leathers/user-ctor-required>
#include <leathers/behavior-change>
#include <leathers/static-ctor-not-thread-safe>
#include <leathers/is-defined-to-be>
#include <leathers/ill-formed-comma-expr>
#include <leathers/conversion-loss>
#include <leathers/conversion-loss-return>
#include <leathers/this-used-in-init>
#include <leathers/unsafe-conversion>
#include <leathers/object-layout-change>
#include <leathers/digraphs-not-supported>
#include <leathers/expression-has-no-effect>
#include <leathers/unreachable-code-simple>
#include <leathers/inherits-via-dominance>
#include <leathers/signed-unsigned-mismatch>
#include <leathers/signed-unsigned-compare>
#include <leathers/name-length-exceeded>
#include <leathers/not-inlined>
#include <leathers/layout-changed>
#include <leathers/force-not-inlined>
